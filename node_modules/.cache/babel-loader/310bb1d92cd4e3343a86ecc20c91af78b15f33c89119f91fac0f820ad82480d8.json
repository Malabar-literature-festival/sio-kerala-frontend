{"ast":null,"code":"var _jsxFileName = \"/Users/azharpallikkandy/Documents/projects/DataHex/dfms/dfms-admin/src/components/elements/tooltip/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport i18n from \"i18next\"; // i18n library for internationalization\nimport { ToolTip, ToolTipContainer } from \"../../styles/list/styles\";\nimport { LanguageIcon, Languages } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguageTooltip() {\n  _s();\n  // State to store the selected language\n  const [selectedLanguage, setSelectedLanguage] = useState(\n  // If a language is stored in local storage, use it, otherwise use \"de\"\n  localStorage.getItem(\"_lang\") !== null ? localStorage.getItem(\"_lang\") : \"de\");\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  // Function to handle language change\n  const handleLanguageChange = language => {\n    // Change the language in the i18n library\n    i18n.changeLanguage(language);\n    // Store the selected language in local storage\n    localStorage.setItem(\"_lang\", language);\n    // Update the selectedLanguage state\n    setSelectedLanguage(language);\n    setShowTooltip(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ToolTipContainer, {\n    onMouseEnter: () => setShowTooltip(true),\n    onMouseLeave: () => setShowTooltip(false),\n    children: [/*#__PURE__*/_jsxDEV(LanguageIcon, {\n      children: selectedLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(ToolTip, {\n      className: \"language\",\n      children: /*#__PURE__*/_jsxDEV(Languages, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: selectedLanguage === \"en\" ? \"active\" : \"\",\n          onClick: () => handleLanguageChange(\"en\"),\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: selectedLanguage === \"de\" ? \"active\" : \"\",\n          onClick: () => handleLanguageChange(\"de\"),\n          children: \"German\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguageTooltip, \"cNLDGrV+GMaOD4lsuY+tLtcrBCk=\");\n_c = LanguageTooltip;\nexport default LanguageTooltip;\nvar _c;\n$RefreshReg$(_c, \"LanguageTooltip\");","map":{"version":3,"names":["React","useState","i18n","ToolTip","ToolTipContainer","LanguageIcon","Languages","LanguageTooltip","selectedLanguage","setSelectedLanguage","localStorage","getItem","showTooltip","setShowTooltip","handleLanguageChange","language","changeLanguage","setItem"],"sources":["/Users/azharpallikkandy/Documents/projects/DataHex/dfms/dfms-admin/src/components/elements/tooltip/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport i18n from \"i18next\"; // i18n library for internationalization\nimport { ToolTip, ToolTipContainer } from \"../../styles/list/styles\";\nimport { LanguageIcon, Languages } from \"./styles\";\nfunction LanguageTooltip() {\n  // State to store the selected language\n  const [selectedLanguage, setSelectedLanguage] = useState(\n    // If a language is stored in local storage, use it, otherwise use \"de\"\n    localStorage.getItem(\"_lang\") !== null ? localStorage.getItem(\"_lang\") : \"de\"\n  );\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  // Function to handle language change\n  const handleLanguageChange = (language) => {\n    // Change the language in the i18n library\n    i18n.changeLanguage(language);\n    // Store the selected language in local storage\n    localStorage.setItem(\"_lang\", language);\n    // Update the selectedLanguage state\n    setSelectedLanguage(language);\n    setShowTooltip(false);\n  };\n\n  return (\n    <ToolTipContainer onMouseEnter={() => setShowTooltip(true)} onMouseLeave={() => setShowTooltip(false)}>\n      <LanguageIcon>{selectedLanguage}</LanguageIcon>\n      {showTooltip && (\n        <ToolTip className=\"language\">\n          <Languages>\n            {/* Language option for English */}\n            <div className={selectedLanguage === \"en\" ? \"active\" : \"\"} onClick={() => handleLanguageChange(\"en\")}>\n              English\n            </div>\n            {/* Language option for German */}\n            <div className={selectedLanguage === \"de\" ? \"active\" : \"\"} onClick={() => handleLanguageChange(\"de\")}>\n              German\n            </div>\n          </Languages>\n        </ToolTip>\n      )}\n    </ToolTipContainer>\n  );\n}\n\nexport default LanguageTooltip;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,SAAS,CAAC,CAAC;AAC5B,SAASC,OAAO,EAAEC,gBAAgB,QAAQ,0BAA0B;AACpE,SAASC,YAAY,EAAEC,SAAS,QAAQ,UAAU;AAAC;AACnD,SAASC,eAAe,GAAG;EAAA;EACzB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ;EACtD;EACAS,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,GAAGD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAC9E;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMa,oBAAoB,GAAIC,QAAQ,IAAK;IACzC;IACAb,IAAI,CAACc,cAAc,CAACD,QAAQ,CAAC;IAC7B;IACAL,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;IACvC;IACAN,mBAAmB,CAACM,QAAQ,CAAC;IAC7BF,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACE,QAAC,gBAAgB;IAAC,YAAY,EAAE,MAAMA,cAAc,CAAC,IAAI,CAAE;IAAC,YAAY,EAAE,MAAMA,cAAc,CAAC,KAAK,CAAE;IAAA,wBACpG,QAAC,YAAY;MAAA,UAAEL;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAgB,EAC9CI,WAAW,iBACV,QAAC,OAAO;MAAC,SAAS,EAAC,UAAU;MAAA,uBAC3B,QAAC,SAAS;QAAA,wBAER;UAAK,SAAS,EAAEJ,gBAAgB,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAG;UAAC,OAAO,EAAE,MAAMM,oBAAoB,CAAC,IAAI,CAAE;UAAA,UAAC;QAEtG;UAAA;UAAA;UAAA;QAAA,QAAM,eAEN;UAAK,SAAS,EAAEN,gBAAgB,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAG;UAAC,OAAO,EAAE,MAAMM,oBAAoB,CAAC,IAAI,CAAE;UAAA,UAAC;QAEtG;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA,QAEf;EAAA;IAAA;IAAA;IAAA;EAAA,QACgB;AAEvB;AAAC,GAtCQP,eAAe;AAAA,KAAfA,eAAe;AAwCxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}