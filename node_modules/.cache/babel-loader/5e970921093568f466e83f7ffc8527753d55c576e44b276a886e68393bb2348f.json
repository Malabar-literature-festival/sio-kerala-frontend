{"ast":null,"code":"var _jsxFileName = \"/Users/azharpallikkandy/Documents/projects/DataHex/dfms/dfms-admin/src/components/private/common/layout/index.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loader from \"../../../elements/loader\";\nimport Message from \"../../../elements/message\";\nimport Footer from \"./footer\";\nimport Header from \"./header\";\nimport Menu from \"./menu\";\nimport { Container, MainContainer, SideBar } from \"./styels\";\nimport { clearLogin } from \"../../../../store/actions/login\";\n\n/**\n * withLayout HOC that wraps a component and adds the layout elements to it.\n * @param {component} WrappedComponent The component to wrap with the layout.\n * @returns {function} The higher order component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withLayout = WrappedComponent => {\n  var _s = $RefreshSig$();\n  /**\n   * The higher order component.\n   * @param {object} props Props to pass down to the wrapped component.\n   * @returns {jsx} The component with the layout.\n   */\n  return _s(props => {\n    _s();\n    // Use useNavigate hook from react-router-dom to navigate programmatically.\n    const navigate = useNavigate();\n    // Use useDispatch hook from react-redux to dispatch actions.\n    const dispatch = useDispatch();\n    // State for the message to display.\n    const {\n      t\n    } = useTranslation();\n    // t is using to translate the content\n    const [meessage, setMessage] = useState({\n      type: 1,\n      content: t(\"sessionExpired\"),\n      okay: t(\"startOver\"),\n      onClose: () => {\n        navigate(\"/\");\n        dispatch(clearLogin());\n      }\n    });\n    // State to keep track of whether to show the message or not.\n    const [showMessage, setShowMessage] = useState(false);\n    // State to keep track of whether to show the loader or not.\n    const [showLoader, setShowLoader] = useState(false);\n    /**\n     * Function to set the showLoader state.\n     * @param {boolean} status The status of the loader.\n     */\n    const setLoaderBox = useCallback(status => {\n      setShowLoader(status);\n    }, []);\n    /**\n     * Function to set the message to display.\n     * @param {object} messageContent The content of the message.\n     */\n    const setMessageBox = messageContent => {\n      setMessage(messageContent);\n      setShowMessage(true);\n    };\n    /**\n     * Function to close the message.\n     */\n    const closeMessage = () => {\n      setMessage({\n        ...meessage,\n        onClose: null\n      });\n      setShowMessage(false);\n    };\n    // Get the vehicle state from the redux store.\n    const user = useSelector(state => state.login);\n    // Get the menu status from the redux store.\n    const menuStatus = useSelector(state => state.menuStatus);\n    /**\n     * Effect to update the showLoader state when the vehicle data changes.\n     */\n    useEffect(() => {\n      if (user.data.token) {\n        setShowLoader(false);\n      }\n    }, [user]);\n    const themeColors = useSelector(state => state.themeColors);\n    return user.data.token ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SideBar, {\n          theme: themeColors,\n          className: menuStatus && \"active\",\n          children: [/*#__PURE__*/_jsxDEV(Menu, {\n            user: user.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          user: user.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(WrappedComponent, {\n            user: user.data,\n            ...props,\n            setLoaderBox: setLoaderBox,\n            setMessage: setMessageBox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), showMessage && /*#__PURE__*/_jsxDEV(Message, {\n            meessage: meessage,\n            closeMessage: closeMessage,\n            setLoaderBox: setLoaderBox,\n            showMessage: showMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), showLoader && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      meessage: meessage,\n      closeMessage: closeMessage,\n      setLoaderBox: setLoaderBox,\n      showMessage: showMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }, \"1kVYrwms+TPIa2E/p817ppaC7nU=\", false, function () {\n    return [useNavigate, useDispatch, useTranslation, useSelector, useSelector, useSelector];\n  });\n};\nexport default withLayout;","map":{"version":3,"names":["React","useCallback","useEffect","useState","useTranslation","useDispatch","useSelector","useNavigate","Loader","Message","Footer","Header","Menu","Container","MainContainer","SideBar","clearLogin","withLayout","WrappedComponent","props","navigate","dispatch","t","meessage","setMessage","type","content","okay","onClose","showMessage","setShowMessage","showLoader","setShowLoader","setLoaderBox","status","setMessageBox","messageContent","closeMessage","user","state","login","menuStatus","data","token","themeColors"],"sources":["/Users/azharpallikkandy/Documents/projects/DataHex/dfms/dfms-admin/src/components/private/common/layout/index.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loader from \"../../../elements/loader\";\nimport Message from \"../../../elements/message\";\nimport Footer from \"./footer\";\nimport Header from \"./header\";\nimport Menu from \"./menu\";\nimport { Container, MainContainer, SideBar } from \"./styels\";\nimport { clearLogin } from \"../../../../store/actions/login\";\n\n/**\n * withLayout HOC that wraps a component and adds the layout elements to it.\n * @param {component} WrappedComponent The component to wrap with the layout.\n * @returns {function} The higher order component.\n */\nconst withLayout = (WrappedComponent) => {\n  /**\n   * The higher order component.\n   * @param {object} props Props to pass down to the wrapped component.\n   * @returns {jsx} The component with the layout.\n   */\n  return (props) => {\n    // Use useNavigate hook from react-router-dom to navigate programmatically.\n    const navigate = useNavigate();\n    // Use useDispatch hook from react-redux to dispatch actions.\n    const dispatch = useDispatch();\n    // State for the message to display.\n    const { t } = useTranslation();\n    // t is using to translate the content\n    const [meessage, setMessage] = useState({\n      type: 1,\n      content: t(\"sessionExpired\"),\n      okay: t(\"startOver\"),\n      onClose: () => {\n        navigate(\"/\");\n        dispatch(clearLogin());\n      },\n    });\n    // State to keep track of whether to show the message or not.\n    const [showMessage, setShowMessage] = useState(false);\n    // State to keep track of whether to show the loader or not.\n    const [showLoader, setShowLoader] = useState(false);\n    /**\n     * Function to set the showLoader state.\n     * @param {boolean} status The status of the loader.\n     */\n    const setLoaderBox = useCallback((status) => {\n      setShowLoader(status);\n    }, []);\n    /**\n     * Function to set the message to display.\n     * @param {object} messageContent The content of the message.\n     */\n    const setMessageBox = (messageContent) => {\n      setMessage(messageContent);\n      setShowMessage(true);\n    };\n    /**\n     * Function to close the message.\n     */\n    const closeMessage = () => {\n      setMessage({ ...meessage, onClose: null });\n      setShowMessage(false);\n    };\n    // Get the vehicle state from the redux store.\n    const user = useSelector((state) => state.login);\n    // Get the menu status from the redux store.\n    const menuStatus = useSelector((state) => state.menuStatus);\n    /**\n     * Effect to update the showLoader state when the vehicle data changes.\n     */\n    useEffect(() => {\n      if (user.data.token) {\n        setShowLoader(false);\n      }\n    }, [user]);\n    const themeColors = useSelector((state) => state.themeColors);\n    return user.data.token ? (\n      <React.Fragment>\n        \n        <MainContainer>\n          <SideBar theme={themeColors} className={menuStatus && \"active\"}>\n            <Menu user={user.data}></Menu>\n            <Footer></Footer>\n          </SideBar>\n          <Header user={user.data}></Header>\n          <Container>\n            <WrappedComponent user={user.data} {...props} setLoaderBox={setLoaderBox} setMessage={setMessageBox}></WrappedComponent>\n            {showMessage && <Message meessage={meessage} closeMessage={closeMessage} setLoaderBox={setLoaderBox} showMessage={showMessage}></Message>}\n            {showLoader && <Loader></Loader>}\n          </Container>\n        </MainContainer>\n      </React.Fragment>\n    ) : (\n      <Message meessage={meessage} closeMessage={closeMessage} setLoaderBox={setLoaderBox} showMessage={showMessage}></Message>\n    );\n  };\n};\n\nexport default withLayout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}