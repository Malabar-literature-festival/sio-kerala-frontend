{"ast":null,"code":"var _jsxFileName = \"/Users/azharpallikkandy/Documents/projects/DataHex/dfms/dfms-admin/src/components/elements/form/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FormInput from \"../input\";\nimport { useTranslation } from \"react-i18next\";\nimport { ButtonContanter, Description, ErrorMessage, Footer, Form, Header, Overlay, Page, Plus } from \"./styles\";\nimport Captcha from \"../captcha\";\nimport { CloseIcon } from \"../../../icons\";\n\n/**\n * AutoForm is a generic form component that takes the form input fields and form values as a prop and returns the updated form values on submit.\n *\n * @param {object} props - The props passed to the component\n * @param {array} props.formInput - An array of form input fields\n * @param {object} props.formValues - An object with initial values of the form fields\n * @param {string} props.formType - The type of form, either 'post' or 'put'\n *\n * @returns {JSX.Element} - A form component with the specified form input fields and values\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoForm = props => {\n  _s();\n  // Use the useTranslation hook from react-i18next to handle translations\n  const {\n    t\n  } = useTranslation();\n\n  // State to store the form input fields\n  const [formState, setFormState] = useState(props.formInput);\n\n  // State to store the submit button's disabled status\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  // State to store the form values\n  const [formValues, setFormValues] = useState(null);\n\n  // State to store the validation messages\n  const [formErrors, setFormErrors] = useState(null);\n\n  //State to store Captcha Status Validations Status\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n\n  //State to store Captcha Status Validations Status\n  const [agreementStatus, setAgreementStatus] = useState(false);\n  /**\n   * fieldValidation is a callback function to validate a form field based on its properties\n   *\n   * @param {object} field - The field to be validated\n   * @param {string} value - The value of the field\n   *\n   * @returns {number} flags - The number of validation errors for the field\n   */\n\n  useEffect(() => {\n    // Form default value is validating using Use Effect\n    const formVal = {};\n    const tempFormErrors = {};\n    let date = new Date();\n    props.formInput.forEach(item => {\n      tempFormErrors[item.name] = \"\";\n      if (item.type === \"checkbox\") {\n        let bool = JSON.parse(\"false\");\n        formVal[item.name] = bool;\n      } else if (item.type === \"datetime\" || item.type === \"time\") {\n        formVal[item.name] = date.toISOString();\n      } else if (item.type === \"image\" || item.type === \"file\") {\n        formVal[item.name] = [];\n      } else if (item.type === \"image\" || item.type === \"file\") {\n        formVal[item.name] = [];\n      } else if (item.type === \"date\") {\n        formVal[item.name] = date.toISOString();\n      } else if (item.type === \"multiple\") {\n        formVal[item.name] = [];\n        tempFormErrors[item.name] = [];\n        item.forms.forEach(multiple => {\n          formVal[item.name].push(multiple.reduce((acc, item) => {\n            return {\n              ...acc,\n              [item.name]: \"\"\n            };\n          }, {}));\n          tempFormErrors[item.name].push(multiple.reduce((acc, item) => {\n            return {\n              ...acc,\n              [item.name]: \"\"\n            };\n          }, {}));\n        });\n      } else {\n        formVal[item.name] = item.default;\n        if (item.type === \"select\") {\n          formVal[item.name] = \"\";\n        }\n      }\n    });\n    tempFormErrors[\"captchaError\"] = \"\";\n    tempFormErrors[\"agreementAccept\"] = \"\";\n    setFormValues(formVal);\n    setFormErrors(tempFormErrors);\n    // validation(props.formInput, formVal);\n  }, [props.formInput]);\n  const validation = (fields, udpatedValue, formErrors, captchaStatus, useCaptcha, agreement, useCheckbox) => {\n    const tempformErrors = {\n      ...formErrors\n    };\n    let flags = 0;\n    fields.forEach(item => {\n      if (item.name !== \"_id\") {\n        if (item.type === \"multiple\") {\n          item.forms.forEach((form, multipleIndex) => {\n            form.forEach((inputs, index) => {\n              const res = fieldValidation(inputs, typeof udpatedValue[item.name][multipleIndex][inputs.name] === \"undefined\" ? \"\" : udpatedValue[item.name][multipleIndex][inputs.name]);\n              tempformErrors[item.name][multipleIndex][inputs.name] = res.tempformError;\n              flags += res.flag; //?res.flag:0;\n            });\n          });\n        } else {\n          const res = fieldValidation(item, typeof udpatedValue[item.name] === \"undefined\" ? \"\" : udpatedValue[item.name]);\n          tempformErrors[item.name] = res.tempformError;\n          flags += res.flag; //?res.flag:0;\n        }\n      }\n    });\n\n    const captchaRes = catchaValidation(captchaStatus, useCaptcha);\n    tempformErrors[\"captchaError\"] = captchaRes.tempformError;\n    flags += captchaRes.flag; //?res.flag:0;\n\n    const agreementRes = agreementValidation(agreement, useCheckbox);\n    tempformErrors[\"captchaError\"] = agreementRes.tempformError;\n    flags += agreementRes.flag; //?res.flag:0;\n\n    setFormErrors(tempformErrors);\n    setSubmitDisabled(flags > 0 ? true : false);\n    if (flags === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const fieldValidation = (field, value) => {\n    let flag = 0;\n    let tempformError = \"\";\n    if (!field.update && props.formType === \"put\") {\n      return {\n        flag,\n        tempformError\n      };\n    }\n    if (!field.required && value.length === 0) {\n      return {\n        flag,\n        tempformError\n      };\n    }\n    switch (field.validation) {\n      case \"email\":\n        const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n        if (!regex.test(value)) {\n          tempformError = t(\"validContent\", {\n            label: t(field.label)\n          });\n          flag += 1;\n        }\n        break;\n      case \"fileNumber\":\n        const fileNumber = /[A-Z0-9-]/;\n        if (!fileNumber.test(value)) {\n          tempformError = t(\"validContent\", {\n            label: t(field.label)\n          });\n          flag += 1;\n        }\n        break;\n      case \"licensePlate\":\n        const german = /^[A-Z]{3}[ -]?[A-Z0-9]{2}[ -]?[A-Z0-9]{3,6}$/i;\n        if (!german.test(value)) {\n          tempformError = t(\"validContent\", {\n            label: t(field.label)\n          });\n          flag += 1;\n        }\n        break;\n      case \"amount\":\n        const amount = /^\\d+([.,]\\d{1,2})?$/;\n        if (!amount.test(value)) {\n          tempformError = t(\"validContent\", {\n            label: t(field.label)\n          });\n          flag += 1;\n        }\n        break;\n      case \"datetime\":\n      case \"time\":\n        const date = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})$/;\n        if (!date.test(value)) {\n          tempformError = t(\"validContent\", {\n            label: t(field.label)\n          });\n          flag += 1;\n        }\n        break;\n      case \"text\":\n        break;\n      default:\n        break;\n    }\n    if (field.type === \"image\" || field.type === \"file\") {\n      if (value.length === 0) {\n        tempformError = t(\"validContent\", {\n          label: t(field.label)\n        });\n        flag += 1;\n      }\n    } else {\n      if (field.required && value.length === 0) {\n        tempformError = t(\"required\", {\n          label: t(field.label)\n        });\n        flag += 1;\n      } else if (field.minimum > value.length) {\n        tempformError = t(\"requiredMinimum\", {\n          minimum: field.minimum,\n          label: t(field.label)\n        });\n        flag += 1;\n      } else if (field.maximum < value.length) {\n        tempformError = t(\"maxLimit\", {\n          maximum: field.maximum,\n          label: t(field.label)\n        });\n        flag += 1;\n      }\n    }\n    return {\n      flag,\n      tempformError\n    };\n  };\n  useEffect(() => {}, [formState]);\n  const catchaValidation = (captchaStatus, useCaptcha) => {\n    let flag = 0;\n    let tempformError = \"\";\n    if (captchaStatus === false && useCaptcha === true) {\n      tempformError = t(\"required\", {\n        label: t(\"captcha\")\n      });\n      flag += 1;\n    }\n    return {\n      flag,\n      tempformError\n    };\n  };\n  const agreementValidation = (agreement, useCheckbox) => {\n    let flag = 0;\n    let tempformError = \"\";\n    if (agreement !== true && useCheckbox === true) {\n      tempformError = t(\"required\", {\n        label: t(\"agreement\")\n      });\n      flag += 1;\n    }\n    return {\n      flag,\n      tempformError\n    };\n  };\n  const handleChange = function (event, id) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"text\";\n    let sub = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    // Getting current field\n    const field = formState[id];\n    if (sub === null) {\n      let value = \"\";\n      if (type === \"checkbox\") {\n        value = event.target.checked;\n      } else if (type === \"select\") {\n        value = event.id;\n      } else if (type === \"image\" || type === \"file\") {\n        value = event.target.files;\n      } else if (type === \"datetime\" || type === \"time\") {\n        value = event.toISOString();\n      } else if (type === \"date\") {\n        value = event.toISOString();\n      } else if (field.validation === \"licensePlate\") {\n        value = event.target.value.toString().toUpperCase().replace(/[^a-zA-Z0-9ÄÖÜß\\- ]/g, \"\");\n      } else {\n        value = event.target.value;\n      }\n      const udpateValue = {\n        ...formValues,\n        [field.name]: value\n      };\n      // Creating an updated field\n      // updating the formm values\n      setFormValues(udpateValue);\n\n      // Validating the fields\n      if (validation(formState, udpateValue, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox)) {\n        // Here we can write any state updation\n      }\n    } else {\n      const main = formState[sub.index];\n      const field = main.forms[sub.multipleIndex][id];\n      const udpateValue = {\n        ...formValues\n      };\n      udpateValue[main.name][sub.multipleIndex][field.name] = event.target.value;\n      setFormValues(udpateValue);\n      // Validating the fields\n      if (validation(formState, udpateValue, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox)) {\n        // Here we can write any state updation\n      }\n    }\n  };\n  const submitChange = event => {\n    event.preventDefault();\n    if (validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox)) {\n      props.submitHandler(formValues, formState);\n    }\n  };\n  const addToMultiple = index => {\n    const tempFrom = formState;\n    const tempValues = {\n      ...formValues\n    };\n    const tempErrors = {\n      ...formErrors\n    };\n    tempFrom[index].forms.push(tempFrom[index].forms[0]);\n    const newValues = {\n      ...tempValues[tempFrom[index].name][0]\n    };\n    for (const [key] of Object.entries(newValues)) {\n      newValues[key] = \"\";\n    }\n    tempErrors[tempFrom[index].name].push({\n      ...newValues\n    });\n    tempValues[tempFrom[index].name].push({\n      ...newValues\n    });\n    setFormValues(tempValues);\n    setFormErrors(tempErrors);\n    setFormState(tempFrom);\n    validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox);\n  };\n  const removeFromMultiple = (index, subIndex) => {\n    const tempFrom = formState;\n    const tempValues = {\n      ...formValues\n    };\n    const tempErrors = {\n      ...formErrors\n    };\n    tempFrom[index].forms.splice(subIndex, 1);\n    tempValues[tempFrom[index].name].splice(subIndex, 1);\n    tempErrors[tempFrom[index].name].splice(subIndex, 1);\n    setFormValues(tempValues);\n    setFormErrors(tempErrors);\n    setFormState(tempFrom);\n    validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox);\n  };\n  // const [modalIsOpen] = useState(props.isCreating);\n  const setCaptchaStatusHandler = status => {\n    setCaptchaStatus(status);\n    validation(formState, formValues, formErrors, status, props.useCaptcha, agreementStatus, props.useCheckbox);\n  };\n  const setAgreementStatusHandler = status => {\n    setAgreementStatus(status);\n    validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, status, props.useCheckbox);\n  };\n  const closeModal = () => {\n    props.isOpenHandler(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    className: props.plainForm ? \"plain\" : \"popup\",\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      className: props.plainForm ? \"plain\" : \"popup\",\n      children: [props.header ? /*#__PURE__*/_jsxDEV(Header, {\n        className: props.plainForm ? \"plain\" : \"popup\",\n        children: [props.header, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }, this) : \"\", props.description && /*#__PURE__*/_jsxDEV(Description, {\n        dangerouslySetInnerHTML: {\n          __html: props.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 31\n      }, this), formValues && /*#__PURE__*/_jsxDEV(Form, {\n        className: props.plainForm ? \"plain\" : \"popup\",\n        children: [formState && formState.map((item, index) => props.formType === \"put\" && item.update || props.formType === \"post\" ? item.type === \"multiple\" && item.forms ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [item.forms.map((multiple, multipleIndex) => /*#__PURE__*/_jsxDEV(Form, {\n            className: props.plainForm ? \"plain sub\" : \"popup sub\",\n            children: [multiple.map((subItem, childIndex) => /*#__PURE__*/_jsxDEV(FormInput, {\n              animation: `sub`,\n              placeholder: subItem.placeHolder,\n              sub: {\n                index,\n                multipleIndex\n              },\n              id: childIndex,\n              error: formErrors[formState[index].name][multipleIndex][subItem.name],\n              value: formValues[formState[index].name][multipleIndex][subItem.name],\n              ...subItem,\n              onChange: handleChange\n            }, `input` + childIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)), multipleIndex > 0 && /*#__PURE__*/_jsxDEV(ButtonContanter, {\n              className: \"close\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFromMultiple(index, multipleIndex),\n                children: /*#__PURE__*/_jsxDEV(Plus, {\n                  children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this)]\n          }, `input` + multipleIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)), item.forms.length < item.maximum && /*#__PURE__*/_jsxDEV(ButtonContanter, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addToMultiple(index),\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 29\n              }, this), t(\"Add New Payment Request\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this)]\n        }, `input` + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(FormInput, {\n          animation: `sub-1`,\n          placeholder: item.placeHolder,\n          id: index,\n          error: formErrors[formState[index].name],\n          value: formValues[formState[index].name],\n          ...item,\n          onChange: handleChange\n        }, `input` + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this) : \"\"), submitDisabled && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: t(\"mandatory\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 32\n        }, this), props.useCaptcha === true && /*#__PURE__*/_jsxDEV(Captcha, {\n          error: formErrors[\"captchaError\"],\n          label: t(\"captcha\"),\n          setCaptchaStatus: setCaptchaStatusHandler\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 43\n        }, this), props.useCheckbox === true && /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"checkbox\",\n          placeholder: `acceptAgreement`,\n          id: 1,\n          value: agreementStatus,\n          onChange: setAgreementStatusHandler\n        }, `acceptAgreement`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        className: props.buttonStyle ? props.buttonStyle : \"center\",\n        children: [!props.plainForm && /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"close\",\n          value: t(\"cancel\"),\n          onChange: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          disabled: submitDisabled,\n          type: \"submit\",\n          name: \"submit\",\n          value: t(props.button ? props.button : \"submit\"),\n          onChange: submitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoForm, \"saSgM++QTt/jm8WUJ38FLEZbUrQ=\", false, function () {\n  return [useTranslation];\n});\n_c = AutoForm;\nexport default AutoForm;\nvar _c;\n$RefreshReg$(_c, \"AutoForm\");","map":{"version":3,"names":["React","useState","useEffect","FormInput","useTranslation","ButtonContanter","Description","ErrorMessage","Footer","Form","Header","Overlay","Page","Plus","Captcha","CloseIcon","AutoForm","props","t","formState","setFormState","formInput","submitDisabled","setSubmitDisabled","formValues","setFormValues","formErrors","setFormErrors","captchaStatus","setCaptchaStatus","agreementStatus","setAgreementStatus","formVal","tempFormErrors","date","Date","forEach","item","name","type","bool","JSON","parse","toISOString","forms","multiple","push","reduce","acc","default","validation","fields","udpatedValue","useCaptcha","agreement","useCheckbox","tempformErrors","flags","form","multipleIndex","inputs","index","res","fieldValidation","tempformError","flag","captchaRes","catchaValidation","agreementRes","agreementValidation","field","value","update","formType","required","length","regex","test","label","fileNumber","german","amount","minimum","maximum","handleChange","event","id","sub","target","checked","files","toString","toUpperCase","replace","udpateValue","main","submitChange","preventDefault","submitHandler","addToMultiple","tempFrom","tempValues","tempErrors","newValues","key","Object","entries","removeFromMultiple","subIndex","splice","setCaptchaStatusHandler","status","setAgreementStatusHandler","closeModal","isOpenHandler","plainForm","header","description","__html","map","subItem","childIndex","placeHolder","buttonStyle","button"],"sources":["/Users/azharpallikkandy/Documents/projects/DataHex/dfms/dfms-admin/src/components/elements/form/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FormInput from \"../input\";\nimport { useTranslation } from \"react-i18next\";\nimport { ButtonContanter, Description, ErrorMessage, Footer, Form, Header, Overlay, Page, Plus } from \"./styles\";\nimport Captcha from \"../captcha\";\nimport { CloseIcon } from \"../../../icons\";\n\n/**\n * AutoForm is a generic form component that takes the form input fields and form values as a prop and returns the updated form values on submit.\n *\n * @param {object} props - The props passed to the component\n * @param {array} props.formInput - An array of form input fields\n * @param {object} props.formValues - An object with initial values of the form fields\n * @param {string} props.formType - The type of form, either 'post' or 'put'\n *\n * @returns {JSX.Element} - A form component with the specified form input fields and values\n */\nconst AutoForm = (props) => {\n  // Use the useTranslation hook from react-i18next to handle translations\n  const { t } = useTranslation();\n\n  // State to store the form input fields\n  const [formState, setFormState] = useState(props.formInput);\n\n  // State to store the submit button's disabled status\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  // State to store the form values\n  const [formValues, setFormValues] = useState(null);\n\n  // State to store the validation messages\n  const [formErrors, setFormErrors] = useState(null);\n\n  //State to store Captcha Status Validations Status\n  const [captchaStatus, setCaptchaStatus] = useState(false);\n\n  //State to store Captcha Status Validations Status\n  const [agreementStatus, setAgreementStatus] = useState(false);\n  /**\n   * fieldValidation is a callback function to validate a form field based on its properties\n   *\n   * @param {object} field - The field to be validated\n   * @param {string} value - The value of the field\n   *\n   * @returns {number} flags - The number of validation errors for the field\n   */\n\n  useEffect(() => {\n    // Form default value is validating using Use Effect\n    const formVal = {};\n    const tempFormErrors = {};\n    let date = new Date();\n    props.formInput.forEach((item) => {\n      tempFormErrors[item.name] = \"\";\n      if (item.type === \"checkbox\") {\n        let bool = JSON.parse(\"false\");\n        formVal[item.name] = bool;\n      } else if (item.type === \"datetime\" || item.type === \"time\") {\n        formVal[item.name] = date.toISOString();\n      } else if (item.type === \"image\" || item.type === \"file\") {\n        formVal[item.name] = [];\n      } else if (item.type === \"image\" || item.type === \"file\") {\n        formVal[item.name] = [];\n      } else if (item.type === \"date\") {\n        formVal[item.name] = date.toISOString();\n      } else if (item.type === \"multiple\") {\n        formVal[item.name] = [];\n        tempFormErrors[item.name] = [];\n        item.forms.forEach((multiple) => {\n          formVal[item.name].push(\n            multiple.reduce((acc, item) => {\n              return { ...acc, [item.name]: \"\" };\n            }, {})\n          );\n          tempFormErrors[item.name].push(\n            multiple.reduce((acc, item) => {\n              return { ...acc, [item.name]: \"\" };\n            }, {})\n          );\n        });\n      } else {\n        formVal[item.name] = item.default;\n        if (item.type === \"select\") {\n          formVal[item.name] = \"\";\n        }\n      }\n    });\n    tempFormErrors[\"captchaError\"] = \"\";\n    tempFormErrors[\"agreementAccept\"] = \"\";\n    setFormValues(formVal);\n    setFormErrors(tempFormErrors);\n    // validation(props.formInput, formVal);\n  }, [props.formInput]);\n\n  const validation = (fields, udpatedValue, formErrors, captchaStatus, useCaptcha, agreement, useCheckbox) => {\n    const tempformErrors = { ...formErrors };\n    let flags = 0;\n    fields.forEach((item) => {\n      if (item.name !== \"_id\") {\n        if (item.type === \"multiple\") {\n          item.forms.forEach((form, multipleIndex) => {\n            form.forEach((inputs, index) => {\n              const res = fieldValidation(inputs, typeof udpatedValue[item.name][multipleIndex][inputs.name] === \"undefined\" ? \"\" : udpatedValue[item.name][multipleIndex][inputs.name]);\n              tempformErrors[item.name][multipleIndex][inputs.name] = res.tempformError;\n              flags += res.flag; //?res.flag:0;\n            });\n          });\n        } else {\n          const res = fieldValidation(item, typeof udpatedValue[item.name] === \"undefined\" ? \"\" : udpatedValue[item.name]);\n          tempformErrors[item.name] = res.tempformError;\n          flags += res.flag; //?res.flag:0;\n        }\n      }\n    });\n    const captchaRes = catchaValidation(captchaStatus, useCaptcha);\n    tempformErrors[\"captchaError\"] = captchaRes.tempformError;\n    flags += captchaRes.flag; //?res.flag:0;\n\n    const agreementRes = agreementValidation(agreement, useCheckbox);\n    tempformErrors[\"captchaError\"] = agreementRes.tempformError;\n    flags += agreementRes.flag; //?res.flag:0;\n\n    setFormErrors(tempformErrors);\n    setSubmitDisabled(flags > 0 ? true : false);\n    if (flags === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const fieldValidation = (field, value) => {\n    let flag = 0;\n    let tempformError = \"\";\n\n    if (!field.update && props.formType === \"put\") {\n      return { flag, tempformError };\n    }\n\n    if (!field.required && value.length === 0) {\n      return { flag, tempformError };\n    }\n\n    switch (field.validation) {\n      case \"email\":\n        const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n        if (!regex.test(value)) {\n          tempformError = t(\"validContent\", { label: t(field.label) });\n          flag += 1;\n        }\n        break;\n      case \"fileNumber\":\n        const fileNumber = /[A-Z0-9-]/;\n        if (!fileNumber.test(value)) {\n          tempformError = t(\"validContent\", { label: t(field.label) });\n          flag += 1;\n        }\n        break;\n      case \"licensePlate\":\n        const german = /^[A-Z]{3}[ -]?[A-Z0-9]{2}[ -]?[A-Z0-9]{3,6}$/i;\n        if (!german.test(value)) {\n          tempformError = t(\"validContent\", { label: t(field.label) });\n          flag += 1;\n        }\n        break;\n\n      case \"amount\":\n        const amount = /^\\d+([.,]\\d{1,2})?$/;\n        if (!amount.test(value)) {\n          tempformError = t(\"validContent\", { label: t(field.label) });\n          flag += 1;\n        }\n        break;\n      case \"datetime\":\n      case \"time\":\n        const date = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})$/;\n        if (!date.test(value)) {\n          tempformError = t(\"validContent\", { label: t(field.label) });\n          flag += 1;\n        }\n        break;\n      case \"text\":\n        break;\n      default:\n        break;\n    }\n    if (field.type === \"image\" || field.type === \"file\") {\n      if (value.length === 0) {\n        tempformError = t(\"validContent\", { label: t(field.label) });\n        flag += 1;\n      }\n    } else {\n      if (field.required && value.length === 0) {\n        tempformError = t(\"required\", { label: t(field.label) });\n        flag += 1;\n      } else if (field.minimum > value.length) {\n        tempformError = t(\"requiredMinimum\", { minimum: field.minimum, label: t(field.label) });\n\n        flag += 1;\n      } else if (field.maximum < value.length) {\n        tempformError = t(\"maxLimit\", { maximum: field.maximum, label: t(field.label) });\n\n        flag += 1;\n      }\n    }\n    return { flag, tempformError };\n  };\n  useEffect(() => {}, [formState]);\n\n  const catchaValidation = (captchaStatus, useCaptcha) => {\n    let flag = 0;\n    let tempformError = \"\";\n    if (captchaStatus === false && useCaptcha === true) {\n      tempformError = t(\"required\", { label: t(\"captcha\") });\n      flag += 1;\n    }\n    return { flag, tempformError };\n  };\n  const agreementValidation = (agreement, useCheckbox) => {\n    let flag = 0;\n    let tempformError = \"\";\n    if (agreement !== true && useCheckbox === true) {\n      tempformError = t(\"required\", { label: t(\"agreement\") });\n      flag += 1;\n    }\n    return { flag, tempformError };\n  };\n\n  const handleChange = (event, id, type = \"text\", sub = null) => {\n    // Getting current field\n    const field = formState[id];\n    if (sub === null) {\n      let value = \"\";\n      if (type === \"checkbox\") {\n        value = event.target.checked;\n      } else if (type === \"select\") {\n        value = event.id;\n      } else if (type === \"image\" || type === \"file\") {\n        value = event.target.files;\n      } else if (type === \"datetime\" || type === \"time\") {\n        value = event.toISOString();\n      } else if (type === \"date\") {\n        value = event.toISOString();\n      } else if (field.validation === \"licensePlate\") {\n        value = event.target.value\n          .toString()\n          .toUpperCase()\n          .replace(/[^a-zA-Z0-9ÄÖÜß\\- ]/g, \"\");\n      } else {\n        value = event.target.value;\n      }\n      const udpateValue = {\n        ...formValues,\n        [field.name]: value,\n      };\n      // Creating an updated field\n      // updating the formm values\n      setFormValues(udpateValue);\n\n      // Validating the fields\n      if (validation(formState, udpateValue, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox)) {\n        // Here we can write any state updation\n      }\n    } else {\n      const main = formState[sub.index];\n      const field = main.forms[sub.multipleIndex][id];\n      const udpateValue = { ...formValues };\n      udpateValue[main.name][sub.multipleIndex][field.name] = event.target.value;\n      setFormValues(udpateValue);\n      // Validating the fields\n      if (validation(formState, udpateValue, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox)) {\n        // Here we can write any state updation\n      }\n    }\n  };\n\n  const submitChange = (event) => {\n    event.preventDefault();\n    if (validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox)) {\n      props.submitHandler(formValues, formState);\n    }\n  };\n\n  const addToMultiple = (index) => {\n    const tempFrom = formState;\n    const tempValues = { ...formValues };\n    const tempErrors = { ...formErrors };\n    tempFrom[index].forms.push(tempFrom[index].forms[0]);\n    const newValues = { ...tempValues[tempFrom[index].name][0] };\n    for (const [key] of Object.entries(newValues)) {\n      newValues[key] = \"\";\n    }\n    tempErrors[tempFrom[index].name].push({ ...newValues });\n    tempValues[tempFrom[index].name].push({ ...newValues });\n    setFormValues(tempValues);\n    setFormErrors(tempErrors);\n    setFormState(tempFrom);\n    validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox);\n  };\n  const removeFromMultiple = (index, subIndex) => {\n    const tempFrom = formState;\n    const tempValues = { ...formValues };\n    const tempErrors = { ...formErrors };\n    tempFrom[index].forms.splice(subIndex, 1);\n    tempValues[tempFrom[index].name].splice(subIndex, 1);\n    tempErrors[tempFrom[index].name].splice(subIndex, 1);\n    setFormValues(tempValues);\n    setFormErrors(tempErrors);\n    setFormState(tempFrom);\n    validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, agreementStatus, props.useCheckbox);\n  };\n  // const [modalIsOpen] = useState(props.isCreating);\n  const setCaptchaStatusHandler = (status) => {\n    setCaptchaStatus(status);\n    validation(formState, formValues, formErrors, status, props.useCaptcha, agreementStatus, props.useCheckbox);\n  };\n  const setAgreementStatusHandler = (status) => {\n    setAgreementStatus(status);\n    validation(formState, formValues, formErrors, captchaStatus, props.useCaptcha, status, props.useCheckbox);\n  };\n  const closeModal = () => {\n    props.isOpenHandler(false);\n  };\n  return (\n    <Overlay className={props.plainForm ? \"plain\" : \"popup\"}>\n      <Page className={props.plainForm ? \"plain\" : \"popup\"}>\n        {/* when the props have the value of header then form will add the header as props.header*/}\n        {props.header ? <Header className={props.plainForm ? \"plain\" : \"popup\"}>{props.header} </Header> : \"\"}\n        {props.description && <Description dangerouslySetInnerHTML={{ __html: props.description }} />}\n        {formValues && (\n          <Form className={props.plainForm ? \"plain\" : \"popup\"}>\n            {/* Looping the form input array for generating the dynamic form*/}\n            {formState &&\n              formState.map((item, index) =>\n                (props.formType === \"put\" && item.update) || props.formType === \"post\" ? (\n                  item.type === \"multiple\" && item.forms ? (\n                    <React.Fragment key={`input` + index}>\n                      {item.forms.map((multiple, multipleIndex) => (\n                        <Form key={`input` + multipleIndex} className={props.plainForm ? \"plain sub\" : \"popup sub\"}>\n                          {multiple.map((subItem, childIndex) => (\n                            <FormInput animation={`sub`} placeholder={subItem.placeHolder} key={`input` + childIndex} sub={{ index, multipleIndex }} id={childIndex} error={formErrors[formState[index].name][multipleIndex][subItem.name]} value={formValues[formState[index].name][multipleIndex][subItem.name]} {...subItem} onChange={handleChange} />\n                          ))}\n                          {multipleIndex > 0 && (\n                            <ButtonContanter className=\"close\">\n                              <button onClick={() => removeFromMultiple(index, multipleIndex)}>\n                                <Plus>\n                                  <CloseIcon></CloseIcon>\n                                </Plus>\n                              </button>\n                            </ButtonContanter>\n                          )}\n                        </Form>\n                      ))}\n                      {item.forms.length < item.maximum && (\n                        <ButtonContanter>\n                          <button onClick={() => addToMultiple(index)}>\n                            <Plus>+</Plus>\n                            {t(\"Add New Payment Request\")}\n                          </button>\n                        </ButtonContanter>\n                      )}\n                    </React.Fragment>\n                  ) : (\n                    <FormInput animation={`sub-1`} placeholder={item.placeHolder} key={`input` + index} id={index} error={formErrors[formState[index].name]} value={formValues[formState[index].name]} {...item} onChange={handleChange} />\n                  )\n                ) : (\n                  \"\"\n                )\n              )}\n            {/* This Error Message Component will show the eroror while the state of validationMessage is updated! */}\n            {submitDisabled && <ErrorMessage>{t(\"mandatory\")}</ErrorMessage>}\n            {props.useCaptcha === true && <Captcha error={formErrors[\"captchaError\"]} label={t(\"captcha\")} key=\"1\" setCaptchaStatus={setCaptchaStatusHandler}></Captcha>}\n            {props.useCheckbox === true && <FormInput type=\"checkbox\" placeholder={`acceptAgreement`} key={`acceptAgreement`} id={1} value={agreementStatus} onChange={setAgreementStatusHandler} />}\n          </Form>\n        )}\n\n        <Footer className={props.buttonStyle ? props.buttonStyle : \"center\"}>\n          {/* In footer we are setting the buttons for save and cancel the form if the form is plain mode then the cancel button will not be there in the form, the cancel button will be avaible only in form popup once the cancel button in the form is triggered the then form will be closed. */}\n          {!props.plainForm && <FormInput type=\"close\" value={t(\"cancel\")} onChange={closeModal} />}\n          <FormInput disabled={submitDisabled} type=\"submit\" name=\"submit\" value={t(props.button ? props.button : \"submit\")} onChange={submitChange} />\n        </Footer>\n      </Page>\n    </Overlay>\n  );\n};\n\nexport default AutoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}