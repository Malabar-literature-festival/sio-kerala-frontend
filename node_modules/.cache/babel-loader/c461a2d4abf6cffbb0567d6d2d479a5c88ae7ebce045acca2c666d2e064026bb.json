{"ast":null,"code":"// its middlewear to handle reducer call to update a state\n\nimport { postData } from \"../../../backend/api\";\nconst fetchLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: \"FETCH_USER_LOGIN_LOADING\"\n    });\n    postData(data, \"auth/login\").then(response => {\n      if (response.status === 200) {\n        dispatch({\n          type: \"FETCH_USER_LOGIN_SUCCESS\",\n          payload: response.data\n        });\n      } else {\n        dispatch({\n          type: \"FETCH_USER_LOGIN_ERROR\",\n          payload: \"validationFailed\"\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: \"FETCH_USER_LOGIN_ERROR\",\n        payload: \"validationFailed\"\n      });\n    });\n  };\n};\nconst clearLogin = () => {\n  return dispatch => {\n    dispatch({\n      type: \"CLEAR_USER_LOGIN\"\n    });\n  };\n};\nexport { fetchLogin, clearLogin };","map":{"version":3,"names":["postData","fetchLogin","data","dispatch","type","then","response","status","payload","catch","error","clearLogin"],"sources":["/Users/azharpallikkandy/Documents/projects/DataHex/dfms/dfms-admin/src/store/actions/login/index.js"],"sourcesContent":["// its middlewear to handle reducer call to update a state\n\nimport { postData } from \"../../../backend/api\";\n\nconst fetchLogin = (data) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"FETCH_USER_LOGIN_LOADING\",\n    });\n    postData(data, \"auth/login\")\n      .then((response) => {\n        if (response.status === 200) {\n          dispatch({\n            type: \"FETCH_USER_LOGIN_SUCCESS\",\n            payload: response.data,\n          });\n        } else {\n          dispatch({\n            type: \"FETCH_USER_LOGIN_ERROR\",\n            payload: \"validationFailed\",\n          });\n        }\n      })\n      .catch((error) => {\n        dispatch({\n          type: \"FETCH_USER_LOGIN_ERROR\",\n          payload: \"validationFailed\",\n        });\n      });\n  };\n};\nconst clearLogin = () => {\n  return (dispatch) => {\n    dispatch({\n      type: \"CLEAR_USER_LOGIN\",\n    });\n  };\n};\nexport { fetchLogin, clearLogin };\n"],"mappings":"AAAA;;AAEA,SAASA,QAAQ,QAAQ,sBAAsB;AAE/C,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAC3B,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IACFJ,QAAQ,CAACE,IAAI,EAAE,YAAY,CAAC,CACzBG,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BJ,QAAQ,CAAC;UACPC,IAAI,EAAE,0BAA0B;UAChCI,OAAO,EAAEF,QAAQ,CAACJ;QACpB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLC,QAAQ,CAAC;UACPC,IAAI,EAAE,wBAAwB;UAC9BI,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBP,QAAQ,CAAC;QACPC,IAAI,EAAE,wBAAwB;QAC9BI,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;AACH,CAAC;AACD,MAAMG,UAAU,GAAG,MAAM;EACvB,OAAQR,QAAQ,IAAK;IACnBA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AACD,SAASH,UAAU,EAAEU,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}